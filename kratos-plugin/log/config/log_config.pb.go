// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: kratos-plugin/log/config/log_config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 日志初始化配置, proto3 optional 特性
type ZapLoggerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level                  string  `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`                                                                            // 日志等级
	Path                   string  `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`                                                                              // 日志文件的路径
	MaxSize                *uint32 `protobuf:"varint,3,opt,name=max_size,json=maxSize,proto3,oneof" json:"max_size,omitempty"`                                                  // 文件容量的最大值，单位是 mb
	MaxBackup              *uint32 `protobuf:"varint,4,opt,name=max_backup,json=maxBackup,proto3,oneof" json:"max_backup,omitempty"`                                            // 最大文件的保留数量
	MaxAge                 *uint32 `protobuf:"varint,5,opt,name=max_age,json=maxAge,proto3,oneof" json:"max_age,omitempty"`                                                     // 保存的最大天数
	Compress               *bool   `protobuf:"varint,6,opt,name=compress,proto3,oneof" json:"compress,omitempty"`                                                               // 是否压缩日志
	DebugModeOutputConsole *bool   `protobuf:"varint,7,opt,name=debug_mode_output_console,json=debugModeOutputConsole,proto3,oneof" json:"debug_mode_output_console,omitempty"` // debug 模式下输出到控制台
}

func (x *ZapLoggerConfig) Reset() {
	*x = ZapLoggerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kratos_plugin_log_config_log_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZapLoggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZapLoggerConfig) ProtoMessage() {}

func (x *ZapLoggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kratos_plugin_log_config_log_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZapLoggerConfig.ProtoReflect.Descriptor instead.
func (*ZapLoggerConfig) Descriptor() ([]byte, []int) {
	return file_kratos_plugin_log_config_log_config_proto_rawDescGZIP(), []int{0}
}

func (x *ZapLoggerConfig) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *ZapLoggerConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ZapLoggerConfig) GetMaxSize() uint32 {
	if x != nil && x.MaxSize != nil {
		return *x.MaxSize
	}
	return 0
}

func (x *ZapLoggerConfig) GetMaxBackup() uint32 {
	if x != nil && x.MaxBackup != nil {
		return *x.MaxBackup
	}
	return 0
}

func (x *ZapLoggerConfig) GetMaxAge() uint32 {
	if x != nil && x.MaxAge != nil {
		return *x.MaxAge
	}
	return 0
}

func (x *ZapLoggerConfig) GetCompress() bool {
	if x != nil && x.Compress != nil {
		return *x.Compress
	}
	return false
}

func (x *ZapLoggerConfig) GetDebugModeOutputConsole() bool {
	if x != nil && x.DebugModeOutputConsole != nil {
		return *x.DebugModeOutputConsole
	}
	return false
}

var File_kratos_plugin_log_config_log_config_proto protoreflect.FileDescriptor

var file_kratos_plugin_log_config_log_config_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f,
	0x6c, 0x6f, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6c, 0x6f, 0x67,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xd1, 0x02, 0x0a, 0x0f, 0x5a, 0x61, 0x70, 0x4c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x61, 0x78,
	0x41, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x19, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x16, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x42, 0x1c, 0x0a, 0x1a,
	0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x6b, 0x72,
	0x61, 0x74, 0x6f, 0x73, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x6c, 0x6f, 0x67, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kratos_plugin_log_config_log_config_proto_rawDescOnce sync.Once
	file_kratos_plugin_log_config_log_config_proto_rawDescData = file_kratos_plugin_log_config_log_config_proto_rawDesc
)

func file_kratos_plugin_log_config_log_config_proto_rawDescGZIP() []byte {
	file_kratos_plugin_log_config_log_config_proto_rawDescOnce.Do(func() {
		file_kratos_plugin_log_config_log_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_kratos_plugin_log_config_log_config_proto_rawDescData)
	})
	return file_kratos_plugin_log_config_log_config_proto_rawDescData
}

var file_kratos_plugin_log_config_log_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kratos_plugin_log_config_log_config_proto_goTypes = []interface{}{
	(*ZapLoggerConfig)(nil), // 0: logconfig.ZapLoggerConfig
}
var file_kratos_plugin_log_config_log_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kratos_plugin_log_config_log_config_proto_init() }
func file_kratos_plugin_log_config_log_config_proto_init() {
	if File_kratos_plugin_log_config_log_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kratos_plugin_log_config_log_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZapLoggerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kratos_plugin_log_config_log_config_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kratos_plugin_log_config_log_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kratos_plugin_log_config_log_config_proto_goTypes,
		DependencyIndexes: file_kratos_plugin_log_config_log_config_proto_depIdxs,
		MessageInfos:      file_kratos_plugin_log_config_log_config_proto_msgTypes,
	}.Build()
	File_kratos_plugin_log_config_log_config_proto = out.File
	file_kratos_plugin_log_config_log_config_proto_rawDesc = nil
	file_kratos_plugin_log_config_log_config_proto_goTypes = nil
	file_kratos_plugin_log_config_log_config_proto_depIdxs = nil
}
